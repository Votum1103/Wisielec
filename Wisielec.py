# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Wisielec.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtWidgets
from retranslateUI import retranslateUi
from pushbut_proba import push_button_style
from Wisielec_question_label import question_label
from Wisielec_yes_no_pushbutton import yes_no_pushbutton
from Wisielec_zdj import zdj
from Wisielec_wisielec_label import wisielec_label
from Wisielec_keyword_label import keyword_label
from Wisielec_groupbox_input_word import groupbox_input_word


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(677, 574)
        Dialog.setStyleSheet("background-color: white")
        question_label(self, Dialog)
        yes_no_pushbutton(self, Dialog)
        wisielec_label(self, Dialog)
        keyword_label(self, Dialog)
        zdj(self, Dialog)
        push_button_style(self, Dialog)
        groupbox_input_word(self, Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        retranslateUi(self, Dialog)

    def hide_input_groupbox(self):
        self.groupBox_input_word.setVisible(False)

    def assignVariable(self):
        self.given_word = self.linedit_given_word.text()
        self.word = "_ " * len(self.given_word)
        self.keyword_label.setText(self.word)
 
    def addToWord(self, letter):
        for index, char in enumerate(self.given_word):
            if char == letter.lower() or char == letter.capitalize():
                index_space = index * 2
                self.word = self.word[:index_space] + letter.capitalize() + self.word[index_space + 1:]
                self.keyword_label.setText(self.word)
          
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
